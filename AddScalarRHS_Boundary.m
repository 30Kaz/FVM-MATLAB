function boundaryterm=AddScalarRHS_Boundary(Mesh,Field,Fluid)
    boundaryterm=zeros(Mesh.element.number,1);
    
    for i=1:Mesh.face.boundarynum
        switch Mesh.face.boundarycondition(i,1)
            case 1 %Specific pressure
                disp('Specific pressure, Undefined Boundary Condition in AddScalarRHS_Boundary.m')
%                 BoundaryVelocity=zeros(1,3);
%                 for k=1:Mesh.Dimension
%                     BoundaryVelocity(k)...
%                    =Field.element.velocity(Mesh.face.owner(i,1),k)...
%                    +dot(Field.face.velocitygrad(i,3*k-2:3*k),...
%                         Mesh.face.dCF(i)*Mesh.face.ecf(i,:)...
%                         );
%                 end
%                 for k=1:Mesh.Dimension
%                     boundaryterm(Mesh.face.owner(i,1),k)...
%                    =boundaryterm(Mesh.face.owner(i,1),k)...
%                    -Fluid.density*dot(BoundaryVelocity,Mesh.face.Sf(i,:))...
%                    *dot(Field.face.velocitygrad(i,3*k-2:3*k),Mesh.face.dCF(i)*Mesh.face.ecf(i,:));
%                 end
            case 2  %Specific velocity
                    boundaryterm(Mesh.face.owner(i,1))...
                   =boundaryterm(Mesh.face.owner(i,1))...
                   +max(-Field.face.flux(i),0)*Field.face.scalar1(i)...
                   +Fluid.scalar1diff*Mesh.face.Ef(i)/Mesh.face.dCF(i)*Field.face.scalar1(i)...
                   +Fluid.scalar1diff*dot(Field.face.scalar1grad(i,:),Mesh.face.Tf(i,:));
            case {3,4}  %No slip wall,slip wall
              % no updates
            otherwise
                disp('Undefined Boundary Condition in AddScalarRHS_Boundary.m');
        end
    end
    
end